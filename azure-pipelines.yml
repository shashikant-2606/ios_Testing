trigger:
  - main

pool:
  vmImage: 'macOS-11'

stages:
  - stage: emulator
    jobs:
      - job: test
        steps:
          - task: NodeTool@0
            inputs:
              versionSource: 'spec'
              versionSpec: '18.17.1'

          - task: JavaToolInstaller@0
            inputs:
              versionSpec: '11'
              jdkArchitectureOption: 'x64'
              jdkSourceOption: 'PreInstalled'


      - job: tests
        displayName: Run tests
        strategy:
          maxParallel: 2
          matrix:
           REMOTE_SERVER:
            isRemote: true
        steps:
         - task: CmdLine@2
           displayName: 'Configure Appium and Android SDK'
           inputs:
            script: |
             echo "Installing Appium"
             npm install -g appium@next
             ln -fs /usr/local/lib/node_modules/appium/build/lib/main.js /usr/local/bin/appium
             chmod +x /usr/local/bin/appium
             export PATH=$PATH:/usr/local/bin/appium
             appium --version
             echo "Appium installed"

             echo "Installing UIA2 driver"
             appium driver install xcuitest
             appium driver list
             echo "UIA2 driver installed"

             echo "Installing and Running Appium doctor"
             npm install -g request@2.34.0
             npm install @appium/doctor -g
             ln -fs /usr/local/lib/node_modules/appium-doctor/appium-doctor.js /usr/local/bin/appium-doctor
             chmod +x /usr/local/bin/appium-doctor
             export PATH=$PATH:/usr/local/bin/appium-doctor
             appium-doctor
             echo "Appium doctor installed and executed"

         - task: CmdLine@2
           displayName: 'Start Appium server'
           inputs:
            script: |
              appium --allow-insecure chromedriver_autodownload --base-path /wd/hub &
              echo "Appium server started"
              condition: eq(variables['isRemote'], 'true')

         - task: Maven@3
           inputs:
              mavenPomFile: 'pom.xml'
              publishJUnitResults: true
              testResultsFiles: '**/surefire-reports/TEST-*.xml'
              javaHomeOption: 'JDKVersion'
              jdkVersionOption: '1.11'
              mavenVersionOption: 'Default'
              mavenAuthenticateFeed: true
              effectivePomSkip: true
              sonarQubeRunAnalysis: true
              sqMavenPluginVersionChoice: 'latest'
              
         - task: CopyFiles@2
           displayName: 'Copy failure screenshots and test logs'
           inputs:
              SourceFolder: '$(Build.SourcesDirectory)/target'
              Contents: |
                     surefire-reports/failure_screenshots/*.png
                     log/*.log
              TargetFolder: '$(Build.ArtifactStagingDirectory)'
           condition: succeededOrFailed()
            
         - task: PublishBuildArtifacts@1
           displayName: 'Publish copied artifacts'
           inputs:
                PathtoPublish: '$(Build.ArtifactStagingDirectory)'
                ArtifactName: 'drop'
                publishLocation: 'Container'
                condition: succeededOrFailed()
              
  
